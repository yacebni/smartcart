{% extends 'base.html.twig' %}

{% block title %}Mes listes
{% endblock %}

{% block body %}
	{% if app.user.userIdentifier == "Minh" %}
        <div class="border  p-4 rounded-xl absolute top-6 left-1/2 transform -translate-x-1/2">
            <p class="font-bold mb-3 text-center">Dashboard de
                {{ app.user.userIdentifier }}
            </p>
            <div class="flex space-x-4">
                <a href="/admin/article/"
                   class="rounded-xl border border-[#8FB9EB] text-[#8FB9EB] font-bold px-3 py-2 hover:opacity-70 duration-300">
                    Modifier les articles
                </a>
                <a href="/admin/type/article/"
                   class="rounded-xl border border-[#8FB9EB] text-[#8FB9EB] font-bold px-3 py-2 hover:opacity-70 duration-300">
                    Modifier les types
                </a>
            </div>
        </div>
    {% endif %}
<div class="flex items-center space-x-4 p-4 justify-between mb-6">
    <a href="/liste/course" class="flex items-center space-x-4 p-4">
        <img class="w-20 h-20" src="{{ asset('/images/logo.png') }}" alt="logo"/>
        <div>
            <span class="text-black text-4xl font-light">Smart</span>
            <span class="text-black text-4xl font-medium">Cart</span>
        </div>
    </a>
    <a href="/">
        <img class="w-16 h-16" src="{{ asset('/images/utilisateur.png') }}" alt="logo"/>
    </a>
</div>

<div class="w-full flex justify-center">
    <h1 class="font-bold text-3xl">Mes listes de courses</h1>
</div>

<!-- Affichage des statistiques -->
<div class="mt-4 w-full flex justify-center items-center flex-col text-center ">
    <button id="statsButton"
            class="w-40 rounded bg-[#8FB9EB] text-white font-bold px-6 py-2 hover:opacity-70 duration-300">Statistiques
    </button>
    <div>
        <div id="stats"
             class="[&>*]:text-sm transition-all duration-300 ease-in-out overflow-hidden max-h-0 box-border">
            <div class="flex flex-row w-full justify-center">

                <div class="mt-32">
                    <p class="mt-4">Total dépensé :
                        {{ statistics.totalSpent }}
                        €</p>
                    <p>Moyenne dépensée par liste :
                        {{ statistics.averageSpent }}
                        €</p>
                    <p>Article le moins cher :
                        {{ statistics.minArticleName }}
                        {{ statistics.minPrice }}
                        €</p>
                    <p>Article le plus cher :
                        {{ statistics.maxArticleName }}
                        {{ statistics.maxPrice }}
                        €</p>
                </div>
                <div>
                    {% if statistics.maxPrice > 0 %}
                        {# affiche "Pas d'article trouvé" si il n'y aucun article dans les listes / aucune liste #}
                        {% for type, count in statistics.foodTypeCounts %}
                            {% if type != null %}
                                <canvas id="myChart"></canvas>
                            {% endif %}
                        {% endfor %}
                    {% else %}
                        <p>Pas d'article trouvé</p>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>

    <!-- Affichage de la liste des courses -->
    <div id="data"></div>

    {{ include('liste_course/_form.html.twig') }}

    <table class="table-auto w-4/5 mx-auto mt-8 mb-20 border-separate border-spacing-y-2">
        <tbody class="">
        {% for liste_course in liste_courses %}
            <tr id="{{ liste_course.id }}"
                class="text-lg clickable-row duration-200 bg-stone-100 hover:bg-[#8FB9EB] hover:shadow-md group rounded-md ring-1 ring-slate-200 shadow-md hover:cursor-pointer">
                <td class="font-semibold p-6 w-1/2 text-left">{{ liste_course.nomListe }}</td>
                <td class="w-full">
                    <div class="flex justify-end">
                        <a class="flex items-center border-2 border-white rounded-full px-3 mr-3 shadow hover:scale-110 duration-300"
                           href="{{ path('app_liste_course_edit', {'id': liste_course.id}) }}"><img
                                    src="{{ asset('images/editer.png') }}" alt="Edit" class="w-6 h-6"/></a>
                        <form class="" method="post"
                              action="{{ path('app_liste_course_delete', {'id': liste_course.id}) }}"
                              onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette liste ?');">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ liste_course.id) }}">
                            <button onclick="event.stopPropagation();" class="btn h-full w-12 mr-4"><img
                                        src="{{ asset('images/red_bin.png') }}" alt="Delete"
                                        class="w-full h-auto mx-auto hover:scale-125 duration-300"></button>
                        </form>
                    </div>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="3">Aucune liste créée</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <script>
        let showStatistics = false;
        document.querySelectorAll('.clickable-row').forEach(row => {
            row.addEventListener('click', () => {
                let id = row.id;
                window.location.href = '{{ path('app_liste_course_show', {'id': 'ID_REPLACE'}) }}'.replace('ID_REPLACE', id);
            });
        });

        const statsButton = document.querySelector("#statsButton");
        const stats = document.querySelector('#stats')
        statsButton.addEventListener('click', () => {
            if (!showStatistics) {
                stats.classList.add('max-h-80');
                showStatistics = true
            } else {
                stats.classList.remove('max-h-80');
                showStatistics = false
            }
        });
    </script>
    <!-- Inclure Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Div pour contenir le graphique -->

    <script>
        // Récupérer les données de statistiques depuis le backend (à remplacer par vos données réelles)
        const statistics = {
            totalSpent: {{ statistics.totalSpent }},
            numLists: {{ statistics.numLists }},
            foodTypeCounts: {{ statistics.foodTypeCounts | json_encode | raw }}
        };
        var foodTypeCounts = statistics.foodTypeCounts;
        delete foodTypeCounts[""];
        // Préparer les données pour le graphique à secteurs
        const labels = Object.keys(foodTypeCounts);
        const data = Object.values(foodTypeCounts);

        // Créer le graphique
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Proportions de type d\'aliment',
                        data: data,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(255, 206, 86, 0.5)',
                            'rgba(75, 192, 192, 0.5)',
                            'rgba(153, 102, 255, 0.5)',
                            'rgba(255, 159, 64, 0.5)',
                            'rgba(199, 199, 199, 1)', // Light Grey
                            'rgba(83, 109, 254, 1)', // Blue Violet
                            'rgba(40, 167, 69, 1)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(199, 199, 199, 1)',
                            'rgba(83, 109, 254, 1)',
                            'rgba(40, 167, 69, 1)'
                        ],
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: false, // Rendre le graphique non réactif pour une taille fixe
                plugins: {
                    title: {
                        display: true,
                        text: 'Proportions de type d\'aliment'
                    }
                }
            }
        });
    </script>

    {% endblock %}
